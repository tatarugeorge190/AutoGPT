name: CI
on:
  schedule:
    - cron: "*/6 * * * *"
  push:
    branches: [ master ]
  pull_request:
    branches:
  workflow_dispatch:
    branches:

jobs:
  build:

    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.13"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set Locale
      run: |
        sudo apt-get install tzdata locales -y && sudo locale-gen en_US.UTF-8
        sudo localectl set-locale LANG="en_US.UTF-8"
        export LANG="en_US.UTF-8"
        sudo update-locale
        locale -a
        locale
        locale -c -k LC_NUMERIC
        localectl status
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade seleniumbase
        pip install --upgrade pyautogui
        pip install --upgrade pymongo
        pip install --upgrade python-xlib
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are flake8 issues
        # flake8 . --count --show-source --statistics --exclude=temp
    - name: Install Chrome
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt install google-chrome-stable
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Install chromedriver
      run: |
        seleniumbase install chromedriver
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py --uc
    - name: Check which Chrome binaries exist
      run: |
        python -c "import os; print(os.path.exists('/usr/bin/google-chrome'))"
        python -c "import os; print(os.path.exists('/bin/google-chrome-stable'))"
        python -c "import os; print(os.path.exists('/bin/chromium-browser'))"
        python -c "import os; print(os.path.exists('/bin/chromium'))"
    - name: Display Chrome binary that's used
      run: |
        python -c "from seleniumbase.core import detect_b_ver; print(detect_b_ver.get_binary_location('google-chrome'))"
        python -c "from seleniumbase import undetected; print(undetected.find_chrome_executable())"
    - name: Install Cloudflare WARP
      run: |
        # Add Cloudflare's repository and import its GPG key
        sudo apt update
        sudo apt install -y curl
        curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list

        # Install the WARP client
        sudo apt update
        sudo apt install -y cloudflare-warp

        # Register WARP (replace with your WARP credentials if needed)

        sudo warp-cli --accept-tos registration new
        sudo warp-cli --accept-tos connect
        sleep 5
        sudo warp-cli --accept-tos status
    - name: Run python test.py --debug
      run: |
        python test.py --debug --chrome --xvfb
